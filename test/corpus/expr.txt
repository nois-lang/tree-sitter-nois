===
expr infix +
===

1 + 2

---

(module
  (expr
    (subExpr
      (INT))
    (addOp
      (PLUS))
    (subExpr
      (INT))))

===
expr infix <
===

d < 5

---

(module
  (expr
    (subExpr
      (identifier
        (NAME)))
    (ltOp
      (O_ANGLE))
    (subExpr
      (INT))))

===
expr infix chain
===

1 + 2 * 3

---

(module
  (expr
    (subExpr
      (INT))
    (addOp
      (PLUS))
    (subExpr
      (INT))
    (multOp
      (ASTERISK))
    (subExpr
      (INT))))

===
expr prefix
===

-1

---

(module
  (expr
    (subExpr
      (subOp
        (MINUS))
      (INT))))

===
infix prefix expr
===

-1 + 2

---

(module
  (expr
    (subExpr
      (subOp
        (MINUS))
      (INT))
    (addOp
      (PLUS))
    (subExpr
      (INT))))

===
useExpr
===

use std::io::Display

---

(module
  (useStatement
    (USE_KEYWORD)
    (useExpr
      (NAME)
      (COLON)
      (COLON)
      (NAME)
      (COLON)
      (COLON)
      (NAME))))

===
matchExpr
===

match a { b @ A::B(v: value) { b } }

---

(module
  (expr
    (subExpr
      (matchExpr
        (MATCH_KEYWORD)
        (expr
          (subExpr
            (identifier
              (NAME))))
        (matchClauses
          (O_BRACE)
          (matchClause
            (pattern
              (patternBind
                (NAME)
                (AT))
              (conPattern
                (identifier
                  (NAME)
                  (COLON)
                  (COLON)
                  (NAME))
                (conPatternParams
                  (O_PAREN)
                  (fieldPattern
                    (NAME)
                    (COLON)
                    (pattern
                      (NAME)))
                  (C_PAREN))))
            (block
              (O_BRACE)
              (expr
                (subExpr
                  (identifier
                    (NAME))))
              (C_BRACE)))
          (C_BRACE))))))
