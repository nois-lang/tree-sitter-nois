====
Integration
====

// import
use std::io::Display

// sum type
type Vec2(x: Float, y: Float)

// inherent impl
impl Vec2 {
    fn size(self): Float {
        self.x ^ 2. + self.y ^ 2.
    }
}

// impl
impl Display for Vec2 {
    fn fmt(self): String {
        "(" + self.x + ", " + self.y + ")"
    }
}

// variant type
type Shape {
    Rectangle(width: Num, height: Num),
    Circle(radius: Num),
}

// trait
trait Area {
    fn area(self): Num
}

// impl for variant type
impl Area for Shape {
    fn area(self): Num {
        match self {
            Shape::Rectangle(width, height) { width * height }
            Shape::Circle(radius) { math::pi * radius ^ 2 }
        }
    }
}

// function
fn add(a: Int, b: Int): Int { a + b }

// function generics and generic bounds
fn foo<T: Add + Div>(a: T, b: T): T {
    a.add(b).div(b)
}

fn main() {
    // define variable
    let n = 4
    // type hint
    let h: Int = 4

    // literals
    let i = 12
    let f = 12.34
    let c = 'a'
    let s = "abc"
    let b = true
    // list literals
    let l = [1, 2, 3]

    // constructor
    let vec = Vec2::Vec2(x: 2., y: 4.)

    // field accessor
    vec.x

    // function call
    println("hello")

    // method call
    vec.fmt()

    // alternative call syntax
    Vec2::fmt(vec)

    // method call syntax for ambiguous methods
    //Vec2::Display::fmt(vec)

    // if
    let d = if true { 4 } else { 2 + 6 }

    // while loop
    let e = while d < 5 {
        a = a + 1
    }

    // for loop
    let f = for g in [1, 2, 3] {
        println(g)
        g + 1
    }

    // destructuring
    let Vec2::Vec2(x) = vec

    // destructuring alias
    let Vec2::Vec2(x: b) = vec

    // match
    let b = match 4 {
        1 { "one" }
        n if n % 2 == 0 {
            if (n > 5) { "good" } else { "not good" }
        }
        _ { "whatever" }
    }

    // match type
    let b = match vec {
        Vec2::Vec2(x: 1, y: 1) { "one" }
        Vec2::Vec2(x: 1) { "x one whatever" }
        Vec2::Vec2(x) if x != 4 { format("x is {} not 4", x) }
        _ { "whatever"}
    }

    // if let
    if let Option(value) = Some(42) {
        println("value is {}", value)
    } else {
        println("no value")
    }

    // closure
    let square: |Num|: Num = |a| { a^2 }
    let here = || { println("here") }

    // fn reference
    let p = println

    // method reference
    // equivalent to |v: Vec2| v.fmt()
    let r = Vec2::fmt
}

---

(module
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)
            (COLON)
            (COLON)
            (NAME)
            (COLON)
            (COLON)
            (NAME))))
      (ERROR
        (infixOp
          (divOp
            (SLASH))))
      (infixOp
        (divOp
          (SLASH)))
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (typeDef
      (TYPE_KEYWORD)
      (NAME)))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)))
        (postfixOp
          (namedCall
            (O_PAREN)
            (namedArg
              (NAME)
              (COLON)
              (expr
                (subExpr
                  (operand
                    (identifier
                      (NAME))))))
            (COMMA)
            (namedArg
              (NAME)
              (COLON)
              (expr
                (subExpr
                  (operand
                    (identifier
                      (NAME))))))
            (C_PAREN))))
      (ERROR
        (infixOp
          (divOp
            (SLASH))))
      (infixOp
        (divOp
          (SLASH)))
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (implDef
      (IMPL_KEYWORD)
      (ERROR
        (NAME))
      (identifier
        (NAME))
      (block
        (O_BRACE)
        (statement
          (fnDef
            (FN_KEYWORD)
            (NAME)
            (params
              (O_PAREN)
              (ERROR
                (NAME))
              (C_PAREN))
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME)))))
            (block
              (O_BRACE)
              (statement
                (expr
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (accessOp
                      (PERIOD)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (expOp
                      (CARET)))
                  (subExpr
                    (operand
                      (FLOAT)))
                  (infixOp
                    (addOp
                      (PLUS)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (accessOp
                      (PERIOD)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (expOp
                      (CARET)))
                  (subExpr
                    (operand
                      (FLOAT)))))
              (C_BRACE))))
        (C_BRACE))))
  (statement
    (implDef
      (IMPL_KEYWORD)
      (ERROR
        (NAME))
      (identifier
        (NAME))
      (implFor
        (FOR_KEYWORD)
        (identifier
          (NAME)))
      (block
        (O_BRACE)
        (statement
          (fnDef
            (FN_KEYWORD)
            (NAME)
            (params
              (O_PAREN)
              (ERROR
                (NAME))
              (C_PAREN))
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME)))))
            (block
              (O_BRACE)
              (statement
                (expr
                  (subExpr
                    (operand
                      (STRING)))
                  (infixOp
                    (addOp
                      (PLUS)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (accessOp
                      (PERIOD)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (addOp
                      (PLUS)))
                  (subExpr
                    (operand
                      (STRING)))
                  (infixOp
                    (addOp
                      (PLUS)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (accessOp
                      (PERIOD)))
                  (subExpr
                    (operand
                      (identifier
                        (NAME))))
                  (infixOp
                    (addOp
                      (PLUS)))
                  (subExpr
                    (operand
                      (STRING)))))
              (C_BRACE))))
        (C_BRACE))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (typeDef
      (TYPE_KEYWORD)
      (NAME)))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (ERROR
    (O_BRACE))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)))
        (postfixOp
          (namedCall
            (O_PAREN)
            (namedArg
              (NAME)
              (COLON)
              (expr
                (subExpr
                  (operand
                    (identifier
                      (NAME))))))
            (COMMA)
            (namedArg
              (NAME)
              (COLON)
              (expr
                (subExpr
                  (operand
                    (identifier
                      (NAME))))))
            (C_PAREN))))))
  (ERROR
    (COMMA))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)))
        (postfixOp
          (namedCall
            (O_PAREN)
            (namedArg
              (NAME)
              (COLON)
              (expr
                (subExpr
                  (operand
                    (identifier
                      (NAME))))))
            (C_PAREN))))
      (ERROR
        (COMMA)
        (C_BRACE)
        (infixOp
          (divOp
            (SLASH))))
      (infixOp
        (divOp
          (SLASH)))
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (traitDef
      (TRAIT_KEYWORD)
      (NAME)
      (block
        (O_BRACE)
        (statement
          (fnDef
            (FN_KEYWORD)
            (NAME)
            (params
              (O_PAREN)
              (ERROR
                (NAME))
              (C_PAREN))
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME)))))))
        (C_BRACE))))
  (ERROR
    (IMPL_KEYWORD)
    (NAME)
    (NAME)
    (TYPE_KEYWORD))
  (statement
    (implDef
      (IMPL_KEYWORD)
      (identifier
        (NAME))
      (implFor
        (FOR_KEYWORD)
        (identifier
          (NAME)))
      (block
        (O_BRACE)
        (statement
          (fnDef
            (FN_KEYWORD)
            (NAME)
            (params
              (O_PAREN)
              (ERROR
                (NAME))
              (C_PAREN))
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME)))))
            (block
              (O_BRACE)
              (statement
                (expr
                  (subExpr
                    (operand
                      (matchExpr
                        (MATCH_KEYWORD)
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME)))))
                        (matchClauses
                          (O_BRACE)
                          (matchClause
                            (pattern
                              (patternExpr
                                (conPattern
                                  (identifier
                                    (NAME)
                                    (COLON)
                                    (COLON)
                                    (NAME))
                                  (conPatternParams
                                    (O_PAREN)
                                    (fieldPattern
                                      (NAME))
                                    (COMMA)
                                    (fieldPattern
                                      (NAME))
                                    (C_PAREN)))))
                            (block
                              (O_BRACE)
                              (statement
                                (expr
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME))))
                                  (infixOp
                                    (multOp
                                      (ASTERISK)))
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME))))))
                              (C_BRACE)))
                          (matchClause
                            (pattern
                              (patternExpr
                                (conPattern
                                  (identifier
                                    (NAME)
                                    (COLON)
                                    (COLON)
                                    (NAME))
                                  (conPatternParams
                                    (O_PAREN)
                                    (fieldPattern
                                      (NAME))
                                    (C_PAREN)))))
                            (block
                              (O_BRACE)
                              (statement
                                (expr
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME)
                                        (COLON)
                                        (COLON)
                                        (NAME))))
                                  (infixOp
                                    (multOp
                                      (ASTERISK)))
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME))))))
                              (ERROR
                                (infixOp
                                  (expOp
                                    (CARET))))
                              (C_BRACE)))
                          (C_BRACE)))))))
              (C_BRACE))))
        (C_BRACE))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (fnDef
      (FN_KEYWORD)
      (NAME)
      (params
        (O_PAREN)
        (MISSING C_PAREN))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (ERROR
    (COLON)
    (NAME)
    (COMMA))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)
            (COLON)
            (ERROR
              (NAME)
              (C_PAREN))
            (COLON)
            (NAME))))))
  (ERROR
    (O_BRACE))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))
      (infixOp
        (addOp
          (PLUS)))
      (subExpr
        (operand
          (identifier
            (NAME))))
      (ERROR
        (C_BRACE))
      (infixOp
        (divOp
          (SLASH)))
      (ERROR
        (SLASH))
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (statement
    (fnDef
      (FN_KEYWORD)
      (NAME)
      (generics
        (O_ANGLE)
        (generic
          (NAME)
          (COLON)
          (typeBounds
            (identifier
              (NAME))
            (PLUS)
            (identifier
              (NAME))))
        (C_ANGLE))
      (params
        (O_PAREN)
        (MISSING C_PAREN))))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))))
  (ERROR
    (COLON)
    (NAME)
    (COMMA))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME)
            (COLON)
            (ERROR
              (NAME)
              (C_PAREN))
            (COLON)
            (NAME))))))
  (ERROR
    (O_BRACE))
  (statement
    (expr
      (subExpr
        (operand
          (identifier
            (NAME))))
      (infixOp
        (accessOp
          (PERIOD)))
      (subExpr
        (operand
          (identifier
            (NAME)))
        (postfixOp
          (posCall
            (O_PAREN)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME)))))
            (C_PAREN))))
      (infixOp
        (accessOp
          (PERIOD)))
      (subExpr
        (operand
          (identifier
            (NAME)))
        (postfixOp
          (posCall
            (O_PAREN)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME)))))
            (C_PAREN))))))
  (ERROR
    (C_BRACE))
  (statement
    (fnDef
      (FN_KEYWORD)
      (NAME)
      (params
        (O_PAREN)
        (C_PAREN))
      (block
        (O_BRACE)
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (ERROR
              (SLASH)
              (SLASH)
              (TYPE_KEYWORD))
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME)))))
            (EQUALS)
            (ERROR
              (SLASH)
              (SLASH))
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (ERROR
              (LET_KEYWORD))
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME))))
              (infixOp
                (assignOp
                  (EQUALS)))
              (subExpr
                (operand
                  (FLOAT))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (CHAR))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (STRING
                    (ERROR
                      (NAME))))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (listExpr
                    (O_BRACKET)
                    (ERROR
                      (COMMA))
                    (COMMA)
                    (ERROR)
                    (C_BRACKET))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME)))
                (postfixOp
                  (namedCall
                    (O_PAREN)
                    (namedArg
                      (NAME)
                      (COLON)
                      (expr
                        (subExpr
                          (operand
                            (FLOAT)))))
                    (COMMA)
                    (namedArg
                      (NAME)
                      (COLON)
                      (expr
                        (subExpr
                          (operand
                            (FLOAT)))))
                    (C_PAREN))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))
            (infixOp
              (accessOp
                (PERIOD)))
            (subExpr
              (operand
                (identifier
                  (NAME))))
            (infixOp
              (divOp
                (SLASH)))
            (ERROR
              (SLASH))
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME)))
              (postfixOp
                (posCall
                  (O_PAREN)
                  (expr
                    (subExpr
                      (operand
                        (STRING
                          (ERROR
                            (NAME))))))
                  (C_PAREN))))
            (ERROR
              (infixOp
                (divOp
                  (SLASH))))
            (infixOp
              (divOp
                (SLASH)))
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))
            (infixOp
              (accessOp
                (PERIOD)))
            (subExpr
              (operand
                (identifier
                  (NAME)))
              (postfixOp
                (posCall
                  (O_PAREN)
                  (C_PAREN))))
            (infixOp
              (divOp
                (SLASH)))
            (ERROR
              (SLASH))
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME)
                  (COLON)
                  (COLON)
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (O_PAREN)
                (expr
                  (subExpr
                    (operand
                      (identifier
                        (NAME)))))
                (C_PAREN)))
            (ERROR
              (infixOp
                (divOp
                  (SLASH))))
            (infixOp
              (divOp
                (SLASH)))
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (ERROR
          (FOR_KEYWORD)
          (ERROR
            (NAME)
            (NAME)
            (COLON)
            (pattern
              (patternExpr
                (conPattern
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (conPatternParams
                    (O_PAREN)
                    (fieldPattern
                      (NAME))
                    (C_PAREN)))))
            (SLASH)
            (SLASH)
            (IF_KEYWORD)
            (LET_KEYWORD))
          (NAME)
          (EQUALS))
        (statement
          (expr
            (subExpr
              (operand
                (ifExpr
                  (IF_KEYWORD)
                  (expr
                    (subExpr
                      (operand
                        (identifier
                          (NAME)))))
                  (block
                    (O_BRACE)
                    (ERROR)
                    (C_BRACE))
                  (ELSE_KEYWORD)
                  (block
                    (O_BRACE)
                    (ERROR
                      (PLUS))
                    (C_BRACE)))))))
        (ERROR
          (infixOp
            (divOp
              (SLASH)))
          (infixOp
            (divOp
              (SLASH)))
          (WHILE_KEYWORD)
          (NAME))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (whileExpr
                    (WHILE_KEYWORD)
                    (expr
                      (subExpr
                        (operand
                          (identifier
                            (NAME)))))
                    (ERROR
                      (O_ANGLE))
                    (block
                      (O_BRACE)
                      (statement
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME))))
                          (infixOp
                            (assignOp
                              (EQUALS)))
                          (subExpr
                            (operand
                              (identifier
                                (NAME))))))
                      (ERROR
                        (infixOp
                          (addOp
                            (PLUS))))
                      (C_BRACE))))))))
        (ERROR
          (infixOp
            (divOp
              (SLASH)))
          (infixOp
            (divOp
              (SLASH)))
          (FOR_KEYWORD)
          (NAME))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (NAME)))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (forExpr
                    (FOR_KEYWORD)
                    (pattern
                      (patternExpr
                        (NAME)))
                    (IN_KEYWORD)
                    (expr
                      (subExpr
                        (operand
                          (listExpr
                            (O_BRACKET)
                            (ERROR
                              (COMMA))
                            (COMMA)
                            (ERROR)
                            (C_BRACKET)))))
                    (block
                      (O_BRACE)
                      (statement
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME)))
                            (postfixOp
                              (posCall
                                (O_PAREN)
                                (expr
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME)))))
                                (C_PAREN))))))
                      (statement
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME))))))
                      (ERROR
                        (infixOp
                          (addOp
                            (PLUS))))
                      (C_BRACE)))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (conPattern
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (conPatternParams
                    (O_PAREN)
                    (fieldPattern
                      (NAME))
                    (C_PAREN)))))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (identifier
                    (NAME)))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (varDef
            (LET_KEYWORD)
            (pattern
              (patternExpr
                (conPattern
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (conPatternParams
                    (O_PAREN)
                    (fieldPattern
                      (NAME)
                      (COLON)
                      (pattern
                        (patternExpr
                          (NAME))))
                    (C_PAREN)))))
            (EQUALS)
            (expr
              (subExpr
                (operand
                  (identifier
                    (NAME))))
              (ERROR
                (infixOp
                  (divOp
                    (SLASH))))
              (infixOp
                (divOp
                  (SLASH)))
              (subExpr
                (operand
                  (matchExpr
                    (MATCH_KEYWORD)
                    (expr
                      (subExpr
                        (operand
                          (identifier
                            (NAME)))))
                    (ERROR
                      (NAME)
                      (infixOp
                        (assignOp
                          (EQUALS)))
                      (MATCH_KEYWORD)
                      (O_BRACE))
                    (matchClauses
                      (O_BRACE)
                      (ERROR
                        (pattern
                          (patternExpr
                            (STRING
                              (ERROR
                                (NAME))))))
                      (C_BRACE))))))))
        (statement
          (expr
            (subExpr
              (operand
                (identifier
                  (NAME))))))
        (statement
          (expr
            (subExpr
              (operand
                (ifExpr
                  (IF_KEYWORD)
                  (expr
                    (subExpr
                      (operand
                        (identifier
                          (NAME)))))
                  (ERROR
                    (infixOp
                      (modOp
                        (PERCENT)))
                    (infixOp
                      (eqOp
                        (EQUALS)
                        (EQUALS))))
                  (block
                    (O_BRACE)
                    (statement
                      (expr
                        (subExpr
                          (operand
                            (ifExpr
                              (IF_KEYWORD)
                              (expr
                                (subExpr
                                  (operand
                                    (O_PAREN)
                                    (expr
                                      (subExpr
                                        (operand
                                          (identifier
                                            (NAME)))))
                                    (ERROR
                                      (C_ANGLE))
                                    (C_PAREN))))
                              (block
                                (O_BRACE)
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (STRING
                                          (ERROR
                                            (NAME)))))))
                                (C_BRACE))
                              (ELSE_KEYWORD)
                              (block
                                (O_BRACE)
                                (ERROR)
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (identifier
                                          (NAME))))))
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (identifier
                                          (NAME))))))
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (STRING
                                          (ERROR
                                            (C_BRACE)
                                            (UNDERSCORE)
                                            (O_BRACE)))))))
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (identifier
                                          (NAME))))))
                                (statement
                                  (expr
                                    (subExpr
                                      (operand
                                        (STRING
                                          (MISSING """))))))
                                (C_BRACE)))))))
                    (ERROR
                      (infixOp
                        (divOp
                          (SLASH)))
                      (infixOp
                        (divOp
                          (SLASH)))
                      (MATCH_KEYWORD)
                      (NAME))
                    (statement
                      (varDef
                        (LET_KEYWORD)
                        (pattern
                          (patternExpr
                            (NAME)))
                        (EQUALS)
                        (expr
                          (subExpr
                            (operand
                              (matchExpr
                                (MATCH_KEYWORD)
                                (expr
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME)))))
                                (matchClauses
                                  (O_BRACE)
                                  (matchClause
                                    (pattern
                                      (patternExpr
                                        (conPattern
                                          (identifier
                                            (NAME)
                                            (COLON)
                                            (COLON)
                                            (NAME))
                                          (conPatternParams
                                            (O_PAREN)
                                            (fieldPattern
                                              (NAME))
                                            (ERROR
                                              (COLON))
                                            (COMMA)
                                            (fieldPattern
                                              (NAME))
                                            (ERROR
                                              (COLON))
                                            (C_PAREN)))))
                                    (block
                                      (O_BRACE)
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (STRING
                                                (ERROR
                                                  (NAME)))))))
                                      (C_BRACE)))
                                  (matchClause
                                    (pattern
                                      (patternExpr
                                        (conPattern
                                          (identifier
                                            (NAME)
                                            (COLON)
                                            (COLON)
                                            (NAME))
                                          (conPatternParams
                                            (O_PAREN)
                                            (fieldPattern
                                              (NAME))
                                            (ERROR
                                              (COLON))
                                            (C_PAREN)))))
                                    (block
                                      (O_BRACE)
                                      (ERROR)
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (identifier
                                                (NAME))))))
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (identifier
                                                (NAME))))))
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (STRING
                                                (MISSING """))))))
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (identifier
                                                (NAME)
                                                (COLON)
                                                (COLON)
                                                (NAME)))
                                            (postfixOp
                                              (posCall
                                                (O_PAREN)
                                                (expr
                                                  (subExpr
                                                    (operand
                                                      (identifier
                                                        (NAME)))))
                                                (C_PAREN))))))
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (ifExpr
                                                (IF_KEYWORD)
                                                (expr
                                                  (subExpr
                                                    (operand
                                                      (identifier
                                                        (NAME))))
                                                  (infixOp
                                                    (neOp
                                                      (EXCL)
                                                      (EQUALS)))
                                                  (ERROR
                                                    (O_BRACE))
                                                  (subExpr
                                                    (operand
                                                      (identifier
                                                        (NAME)))))
                                                (ERROR
                                                  (O_PAREN)
                                                  (NAME))
                                                (block
                                                  (O_BRACE)
                                                  (C_BRACE)))))))
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (identifier
                                                (NAME))))))
                                      (ERROR
                                        (NAME)
                                        (C_PAREN))
                                      (C_BRACE)))
                                  (matchClause
                                    (pattern
                                      (patternExpr
                                        (hole
                                          (UNDERSCORE))))
                                    (block
                                      (O_BRACE)
                                      (statement
                                        (expr
                                          (subExpr
                                            (operand
                                              (STRING
                                                (ERROR
                                                  (NAME)))))))
                                      (C_BRACE)))
                                  (C_BRACE)))))
                          (ERROR
                            (infixOp
                              (divOp
                                (SLASH))))
                          (infixOp
                            (divOp
                              (SLASH)))
                          (subExpr
                            (operand
                              (ifLetExpr
                                (IF_KEYWORD)
                                (LET_KEYWORD)
                                (ERROR
                                  (NAME)
                                  (LET_KEYWORD))
                                (pattern
                                  (patternExpr
                                    (conPattern
                                      (identifier
                                        (NAME))
                                      (conPatternParams
                                        (O_PAREN)
                                        (fieldPattern
                                          (NAME))
                                        (C_PAREN)))))
                                (EQUALS)
                                (expr
                                  (subExpr
                                    (operand
                                      (identifier
                                        (NAME)))
                                    (postfixOp
                                      (namedCall
                                        (O_PAREN)
                                        (ERROR)
                                        (C_PAREN)))))
                                (block
                                  (O_BRACE)
                                  (statement
                                    (expr
                                      (subExpr
                                        (operand
                                          (identifier
                                            (NAME)))
                                        (postfixOp
                                          (posCall
                                            (O_PAREN)
                                            (ERROR
                                              (NAME)
                                              (NAME)
                                              (O_BRACE)
                                              (C_BRACE))
                                            (expr
                                              (subExpr
                                                (operand
                                                  (identifier
                                                    (NAME)))))
                                            (C_PAREN))))))
                                  (C_BRACE))
                                (ELSE_KEYWORD)
                                (block
                                  (O_BRACE)
                                  (statement
                                    (expr
                                      (subExpr
                                        (operand
                                          (identifier
                                            (NAME)))
                                        (postfixOp
                                          (posCall
                                            (O_PAREN)
                                            (ERROR
                                              (NAME))
                                            (expr
                                              (subExpr
                                                (operand
                                                  (identifier
                                                    (NAME)))))
                                            (ERROR)
                                            (C_PAREN))))))
                                  (C_BRACE)))))
                          (infixOp
                            (divOp
                              (SLASH)))
                          (ERROR
                            (SLASH))
                          (subExpr
                            (operand
                              (identifier
                                (NAME)))))))
                    (statement
                      (varDef
                        (LET_KEYWORD)
                        (pattern
                          (patternExpr
                            (NAME)))
                        (typeAnnot
                          (COLON)
                          (type
                            (fnType
                              (fnTypeParams
                                (PIPE)
                                (type
                                  (typeBounds
                                    (identifier
                                      (NAME))))
                                (PIPE))
                              (typeAnnot
                                (COLON)
                                (type
                                  (typeBounds
                                    (identifier
                                      (NAME))))))))
                        (EQUALS)
                        (expr
                          (subExpr
                            (operand
                              (closureExpr
                                (closureParams
                                  (PIPE)
                                  (param
                                    (pattern
                                      (patternExpr
                                        (NAME))))
                                  (PIPE))
                                (block
                                  (O_BRACE)
                                  (statement
                                    (expr
                                      (subExpr
                                        (operand
                                          (identifier
                                            (NAME))))))
                                  (ERROR
                                    (infixOp
                                      (expOp
                                        (CARET))))
                                  (C_BRACE))))))))
                    (statement
                      (varDef
                        (LET_KEYWORD)
                        (pattern
                          (patternExpr
                            (NAME)))
                        (EQUALS)
                        (expr
                          (subExpr
                            (operand
                              (closureExpr
                                (closureParams
                                  (PIPE)
                                  (PIPE))
                                (block
                                  (O_BRACE)
                                  (statement
                                    (expr
                                      (subExpr
                                        (operand
                                          (identifier
                                            (NAME)))
                                        (postfixOp
                                          (posCall
                                            (O_PAREN)
                                            (expr
                                              (subExpr
                                                (operand
                                                  (STRING
                                                    (ERROR
                                                      (NAME))))))
                                            (C_PAREN))))))
                                  (C_BRACE)))))
                          (ERROR
                            (infixOp
                              (divOp
                                (SLASH))))
                          (infixOp
                            (divOp
                              (SLASH)))
                          (subExpr
                            (operand
                              (identifier
                                (NAME)))))))
                    (statement
                      (expr
                        (subExpr
                          (operand
                            (identifier
                              (NAME))))))
                    (statement
                      (varDef
                        (LET_KEYWORD)
                        (pattern
                          (patternExpr
                            (NAME)))
                        (EQUALS)
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME))))
                          (ERROR
                            (infixOp
                              (divOp
                                (SLASH))))
                          (infixOp
                            (divOp
                              (SLASH)))
                          (subExpr
                            (operand
                              (identifier
                                (NAME)))))))
                    (statement
                      (expr
                        (subExpr
                          (operand
                            (identifier
                              (NAME))))
                        (ERROR
                          (infixOp
                            (divOp
                              (SLASH))))
                        (infixOp
                          (divOp
                            (SLASH)))
                        (subExpr
                          (operand
                            (identifier
                              (NAME))))))
                    (statement
                      (expr
                        (subExpr
                          (operand
                            (identifier
                              (NAME))))))
                    (ERROR
                      (closureParams
                        (PIPE)
                        (param
                          (pattern
                            (patternExpr
                              (NAME)))
                          (typeAnnot
                            (COLON)
                            (type
                              (typeBounds
                                (identifier
                                  (NAME))))))
                        (PIPE)))
                    (statement
                      (expr
                        (subExpr
                          (operand
                            (identifier
                              (NAME))))
                        (infixOp
                          (accessOp
                            (PERIOD)))
                        (subExpr
                          (operand
                            (identifier
                              (NAME)))
                          (postfixOp
                            (posCall
                              (O_PAREN)
                              (C_PAREN))))))
                    (statement
                      (varDef
                        (LET_KEYWORD)
                        (pattern
                          (patternExpr
                            (NAME)))
                        (EQUALS)
                        (expr
                          (subExpr
                            (operand
                              (identifier
                                (NAME)
                                (COLON)
                                (COLON)
                                (NAME)))))))
                    (C_BRACE)))))))
        (MISSING C_BRACE)))))

