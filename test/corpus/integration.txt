===
integration
===

// comment
use pkg
use std::io::Display
use std::iter::{Iter, peekableIter::PeekableIter}
type Foo
type Bar<T>(v: T)
type V<T>{ A(), B(v: T) }
trait Baz<U> { fn a(self): Unit fn f<T>(self): T {} }
impl <T> Baz<Option<T>> for Bar<T> { fn f(self): T {} }
fn foo<T: std::io::Display + U, U>(b: T): Option<U> {
    let a = [1, "str", 'c', true, Option::None(), Option::Some(value: 1), Option::Some(2)]
    let Foo::Foo(x) = Foo::Foo(4)
    let b = if a.next().isSome() { a } else { [] }
    let c = if let Option::Some(value) = a.next { value } else { panic("err") }
    while a.count() < 5 + 3 { List::add(a, 8) }
    for Option::Some(value: v) in a { println(a.x) }
    match c.foo() { -5 if a.count() > 6 {} a @ V::B(v, o: _) {} V::B() {} "str" {} 'c' {} _ {} }
}

---

(module
  (COMMENT)
  (useStatement
    (USE_KEYWORD)
    (useExpr
      (NAME)))
  (useStatement
    (USE_KEYWORD)
    (useExpr
      (NAME)
      (COLON)
      (COLON)
      (NAME)
      (COLON)
      (COLON)
      (NAME)))
  (useStatement
    (USE_KEYWORD)
    (useExpr
      (NAME)
      (COLON)
      (COLON)
      (NAME)
      (COLON)
      (COLON)
      (useList
        (O_BRACE)
        (useExpr
          (NAME))
        (COMMA)
        (useExpr
          (NAME)
          (COLON)
          (COLON)
          (NAME))
        (C_BRACE))))
  (typeDef
    (TYPE_KEYWORD)
    (NAME))
  (typeDef
    (TYPE_KEYWORD)
    (NAME)
    (generics
      (O_ANGLE)
      (generic
        (NAME))
      (C_ANGLE))
    (variantParams
      (O_PAREN)
      (fieldDef
        (NAME)
        (typeAnnot
          (COLON)
          (type
            (typeBounds
              (identifier
                (NAME))))))
      (C_PAREN)))
  (typeDef
    (TYPE_KEYWORD)
    (NAME)
    (generics
      (O_ANGLE)
      (generic
        (NAME))
      (C_ANGLE))
    (variantList
      (O_BRACE)
      (variant
        (NAME)
        (variantParams
          (O_PAREN)
          (C_PAREN)))
      (COMMA)
      (variant
        (NAME)
        (variantParams
          (O_PAREN)
          (fieldDef
            (NAME)
            (typeAnnot
              (COLON)
              (type
                (typeBounds
                  (identifier
                    (NAME))))))
          (C_PAREN)))
      (C_BRACE)))
  (traitDef
    (TRAIT_KEYWORD)
    (NAME)
    (generics
      (O_ANGLE)
      (generic
        (NAME))
      (C_ANGLE))
    (block
      (O_BRACE)
      (fnDef
        (FN_KEYWORD)
        (NAME)
        (params
          (O_PAREN)
          (param
            (pattern
              (NAME)))
          (C_PAREN))
        (typeAnnot
          (COLON)
          (type
            (typeBounds
              (identifier
                (NAME))))))
      (fnDef
        (FN_KEYWORD)
        (NAME)
        (generics
          (O_ANGLE)
          (generic
            (NAME))
          (C_ANGLE))
        (params
          (O_PAREN)
          (param
            (pattern
              (NAME)))
          (C_PAREN))
        (typeAnnot
          (COLON)
          (type
            (typeBounds
              (identifier
                (NAME)))))
        (block
          (O_BRACE)
          (C_BRACE)))
      (C_BRACE)))
  (implDef
    (IMPL_KEYWORD)
    (generics
      (O_ANGLE)
      (generic
        (NAME))
      (C_ANGLE))
    (identifier
      (NAME)
      (typeArgs
        (O_ANGLE)
        (type
          (typeBounds
            (identifier
              (NAME)
              (typeArgs
                (O_ANGLE)
                (type
                  (typeBounds
                    (identifier
                      (NAME))))
                (C_ANGLE)))))
        (C_ANGLE)))
    (implFor
      (FOR_KEYWORD)
      (identifier
        (NAME)
        (typeArgs
          (O_ANGLE)
          (type
            (typeBounds
              (identifier
                (NAME))))
          (C_ANGLE))))
    (block
      (O_BRACE)
      (fnDef
        (FN_KEYWORD)
        (NAME)
        (params
          (O_PAREN)
          (param
            (pattern
              (NAME)))
          (C_PAREN))
        (typeAnnot
          (COLON)
          (type
            (typeBounds
              (identifier
                (NAME)))))
        (block
          (O_BRACE)
          (C_BRACE)))
      (C_BRACE)))
  (fnDef
    (FN_KEYWORD)
    (NAME)
    (generics
      (O_ANGLE)
      (generic
        (NAME)
        (COLON)
        (typeBounds
          (identifier
            (NAME)
            (COLON)
            (COLON)
            (NAME)
            (COLON)
            (COLON)
            (NAME))
          (PLUS)
          (identifier
            (NAME))))
      (COMMA)
      (generic
        (NAME))
      (C_ANGLE))
    (params
      (O_PAREN)
      (param
        (pattern
          (NAME))
        (typeAnnot
          (COLON)
          (type
            (typeBounds
              (identifier
                (NAME))))))
      (C_PAREN))
    (typeAnnot
      (COLON)
      (type
        (typeBounds
          (identifier
            (NAME)
            (typeArgs
              (O_ANGLE)
              (type
                (typeBounds
                  (identifier
                    (NAME))))
              (C_ANGLE))))))
    (block
      (O_BRACE)
      (varDef
        (LET_KEYWORD)
        (pattern
          (NAME))
        (EQUALS)
        (expr
          (subExpr
            (listExpr
              (O_BRACKET)
              (expr
                (subExpr
                  (INT)))
              (COMMA)
              (expr
                (subExpr
                  (STRING)))
              (COMMA)
              (expr
                (subExpr
                  (CHAR)))
              (COMMA)
              (expr
                (subExpr
                  (identifier
                    (NAME))))
              (COMMA)
              (expr
                (subExpr
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (C_PAREN))))
              (COMMA)
              (expr
                (subExpr
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (namedCall
                    (O_PAREN)
                    (namedArg
                      (NAME)
                      (COLON)
                      (expr
                        (subExpr
                          (INT))))
                    (C_PAREN))))
              (COMMA)
              (expr
                (subExpr
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (expr
                      (subExpr
                        (INT)))
                    (C_PAREN))))
              (C_BRACKET)))))
      (varDef
        (LET_KEYWORD)
        (pattern
          (conPattern
            (identifier
              (NAME)
              (COLON)
              (COLON)
              (NAME))
            (conPatternParams
              (O_PAREN)
              (fieldPattern
                (NAME))
              (C_PAREN))))
        (EQUALS)
        (expr
          (subExpr
            (identifier
              (NAME)
              (COLON)
              (COLON)
              (NAME))
            (posCall
              (O_PAREN)
              (expr
                (subExpr
                  (INT)))
              (C_PAREN)))))
      (varDef
        (LET_KEYWORD)
        (pattern
          (NAME))
        (EQUALS)
        (expr
          (subExpr
            (ifExpr
              (IF_KEYWORD)
              (expr
                (subExpr
                  (identifier
                    (NAME)))
                (accessOp
                  (PERIOD))
                (subExpr
                  (identifier
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (C_PAREN)))
                (accessOp
                  (PERIOD))
                (subExpr
                  (identifier
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (C_PAREN))))
              (block
                (O_BRACE)
                (expr
                  (subExpr
                    (identifier
                      (NAME))))
                (C_BRACE))
              (ELSE_KEYWORD)
              (block
                (O_BRACE)
                (expr
                  (subExpr
                    (listExpr
                      (O_BRACKET)
                      (C_BRACKET))))
                (C_BRACE))))))
      (varDef
        (LET_KEYWORD)
        (pattern
          (NAME))
        (EQUALS)
        (expr
          (subExpr
            (ifLetExpr
              (IF_KEYWORD)
              (LET_KEYWORD)
              (pattern
                (conPattern
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (conPatternParams
                    (O_PAREN)
                    (fieldPattern
                      (NAME))
                    (C_PAREN))))
              (EQUALS)
              (expr
                (subExpr
                  (identifier
                    (NAME)))
                (accessOp
                  (PERIOD))
                (subExpr
                  (identifier
                    (NAME))))
              (block
                (O_BRACE)
                (expr
                  (subExpr
                    (identifier
                      (NAME))))
                (C_BRACE))
              (ELSE_KEYWORD)
              (block
                (O_BRACE)
                (expr
                  (subExpr
                    (identifier
                      (NAME))
                    (posCall
                      (O_PAREN)
                      (expr
                        (subExpr
                          (STRING)))
                      (C_PAREN))))
                (C_BRACE))))))
      (expr
        (subExpr
          (whileExpr
            (WHILE_KEYWORD)
            (expr
              (subExpr
                (identifier
                  (NAME)))
              (accessOp
                (PERIOD))
              (subExpr
                (identifier
                  (NAME))
                (posCall
                  (O_PAREN)
                  (C_PAREN)))
              (ltOp
                (O_ANGLE))
              (subExpr
                (INT))
              (addOp
                (PLUS))
              (subExpr
                (INT)))
            (block
              (O_BRACE)
              (expr
                (subExpr
                  (identifier
                    (NAME)
                    (COLON)
                    (COLON)
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (expr
                      (subExpr
                        (identifier
                          (NAME))))
                    (COMMA)
                    (expr
                      (subExpr
                        (INT)))
                    (C_PAREN))))
              (C_BRACE)))))
      (expr
        (subExpr
          (forExpr
            (FOR_KEYWORD)
            (pattern
              (conPattern
                (identifier
                  (NAME)
                  (COLON)
                  (COLON)
                  (NAME))
                (conPatternParams
                  (O_PAREN)
                  (fieldPattern
                    (NAME)
                    (COLON)
                    (pattern
                      (NAME)))
                  (C_PAREN))))
            (IN_KEYWORD)
            (expr
              (subExpr
                (identifier
                  (NAME))))
            (block
              (O_BRACE)
              (expr
                (subExpr
                  (identifier
                    (NAME))
                  (posCall
                    (O_PAREN)
                    (expr
                      (subExpr
                        (identifier
                          (NAME)))
                      (accessOp
                        (PERIOD))
                      (subExpr
                        (identifier
                          (NAME))))
                    (C_PAREN))))
              (C_BRACE)))))
      (expr
        (subExpr
          (matchExpr
            (MATCH_KEYWORD)
            (expr
              (subExpr
                (identifier
                  (NAME)))
              (accessOp
                (PERIOD))
              (subExpr
                (identifier
                  (NAME))
                (posCall
                  (O_PAREN)
                  (C_PAREN))))
            (matchClauses
              (O_BRACE)
              (matchClause
                (pattern
                  (subOp
                    (MINUS))
                  (INT))
                (guard
                  (IF_KEYWORD)
                  (expr
                    (subExpr
                      (identifier
                        (NAME)))
                    (accessOp
                      (PERIOD))
                    (subExpr
                      (identifier
                        (NAME))
                      (posCall
                        (O_PAREN)
                        (C_PAREN)))
                    (gtOp
                      (C_ANGLE))
                    (subExpr
                      (INT))))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (matchClause
                (pattern
                  (patternBind
                    (NAME)
                    (AT))
                  (conPattern
                    (identifier
                      (NAME)
                      (COLON)
                      (COLON)
                      (NAME))
                    (conPatternParams
                      (O_PAREN)
                      (fieldPattern
                        (NAME))
                      (COMMA)
                      (fieldPattern
                        (NAME)
                        (COLON)
                        (pattern
                          (hole
                            (UNDERSCORE))))
                      (C_PAREN))))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (matchClause
                (pattern
                  (conPattern
                    (identifier
                      (NAME)
                      (COLON)
                      (COLON)
                      (NAME))
                    (conPatternParams
                      (O_PAREN)
                      (C_PAREN))))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (matchClause
                (pattern
                  (STRING))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (matchClause
                (pattern
                  (CHAR))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (matchClause
                (pattern
                  (hole
                    (UNDERSCORE)))
                (block
                  (O_BRACE)
                  (C_BRACE)))
              (C_BRACE)))))
      (C_BRACE))))
